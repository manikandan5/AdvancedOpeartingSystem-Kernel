/* new_getstk.c - new_getstk */

#include <xinu.h>

char *new_getstk(uint32 nbytes)
{
	intmask	mask;			
	struct	memblk	*prev, *curr;	
	struct	memblk	*best_fits, *best_fitsprev; 
	mask = disable();

	if (nbytes == 0) 
	{
		restore(mask);
		return (char *)SYSERR;
	}

	nbytes = (uint32) roundmb(nbytes);	

	prev = &memlist;
	curr = memlist.mnext;
	best_fits = prev;
	best_fitsprev = NULL;  

	while (curr != NULL) 
	{			
		if ((curr->mlength >= nbytes)&&(curr->mlength>best_fits->mlength)) 
		{	
			best_fits = curr;		
			best_fitsprev = prev;
		}
		prev = curr;
		curr = curr->mnext;
	}

	if (best_fits == NULL) 
	{	
		restore(mask);
		return (char *)SYSERR;
	}
	if (nbytes == best_fits->mlength)
	{		
		best_fitsprev->mnext = best_fits->mnext;
	} 
	else 
	{				
		best_fits->mlength -= nbytes;
		best_fits = (struct memblk *)((uint32)best_fits + best_fits->mlength);
	}
	memlist.mlength -= nbytes;
	restore(mask);
	char* rtn=(char *)((uint32) best_fits + nbytes - sizeof(uint32));
	int size=nbytes;
	while(size>0)
	{
		*rtn='#';
		*--rtn;
		--size;
	}
	return (char *)((uint32) best_fits + nbytes - sizeof(uint32));
}
